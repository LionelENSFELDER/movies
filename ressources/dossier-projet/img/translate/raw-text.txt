This appendix lists the various assertion methods that are available.
Static vs. Non-Static Usage of Assertion Methods

PHPUnit’s assertions are implemented in PHPUnit\Framework\Assert. PHPUnit\Framework\TestCase inherits from PHPUnit\Framework\Assert.

The assertion methods are declared static and can be invoked from any context using PHPUnit\Framework\Assert::assertTrue(), for instance, or using $this->assertTrue() or self::assertTrue(), for instance, in a class that extends PHPUnit\Framework\TestCase.

In fact, you can even use global function wrappers such as assertTrue() in any context (including classes that extend PHPUnit\Framework\TestCase) when you (manually) include the src/Framework/Assert/Functions.php sourcecode file that comes with PHPUnit.


---


Cet appendice liste les différentes assertions possible.
Utilisation des assertions statiques contre les assertions non statique.

Les assertions de PHPUnit sont implémentées dans le fichier PHPUnit\Framework\Asser. PHPUnit\Framework\TestCase hérite de PHPUnit\Framework\Assert.

Les méthodes d'assertion sont déclarées de façon statique et peuvent être instanciées depuis n'importe quel contexte en utilisant PHPUnit\Framework\Assert::assertTrue(), pour l'instance, ou en utilisant $this->assertTrue() ou encore self::assertTrue(), pour une instance dans une classe qui étend PHPUnit\Framework\TestCase.

En effet, vous pouvez utiliser les wrappers de fonction globales tels que assertTrue() dans n'importe quel contexte (incluant les classes qui étendent PHPUnit\Framework\TestCase) quand vous incluez (manuellement) le code source du fichier src/Framework/Assert/Functions.php livré avec PHPUnit.